/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Clase.LeerSucursales;
import Clase.Producto;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author mauhi
 */
public class TransferirProducto extends javax.swing.JFrame implements LeerSucursales{


    public TransferirProducto() {
        initComponents();
        this.setLocationRelativeTo(null);
        LeerSucursales();
    }

   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        cbxDestino = new javax.swing.JComboBox<>();
        cbxOrigen = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txfCodigo = new javax.swing.JTextField();
        bttTransferir = new javax.swing.JButton();
        txfCantidad = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(255, 231, 15));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("Transferir Productos");

        jButton3.setBackground(new java.awt.Color(0, 0, 255));
        jButton3.setForeground(new java.awt.Color(0, 0, 255));
        jButton3.setText("Inicio");
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel4.setForeground(new java.awt.Color(153, 153, 153));
        jLabel4.setText("Sucursal Origen:");

        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setText("Codigo:");

        jLabel5.setForeground(new java.awt.Color(153, 153, 153));
        jLabel5.setText("Sucursal Destino:");

        bttTransferir.setText("Transferir");
        bttTransferir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttTransferirActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Cantidad");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(49, 49, 49)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(107, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bttTransferir)
                .addGap(39, 39, 39))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbxOrigen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbxDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txfCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(96, 96, 96)
                .addComponent(bttTransferir)
                .addGap(127, 127, 127))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton3)
                .addGap(52, 52, 52)
                .addComponent(jLabel1)
                .addContainerGap(85, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(6, 6, 6)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        VentaPrincipal vent= new VentaPrincipal();
        vent.setVisible(true);
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    }//GEN-LAST:event_jButton3ActionPerformed

    private void bttTransferirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttTransferirActionPerformed
        Guardar();
        
    }//GEN-LAST:event_bttTransferirActionPerformed
    
    public void LeerSucursales() {
        try {
            Connection nuevaConexion = DriverManager.getConnection("jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            String comandoSelect = "SELECT * FROM SUCURSALES";
            PreparedStatement nuevoStatementPreparado = nuevaConexion.prepareStatement(comandoSelect);
            ResultSet resultadoBusqueda = nuevoStatementPreparado.executeQuery();
            while (resultadoBusqueda.next()) {
                cbxOrigen.addItem(resultadoBusqueda.getString("nombre"));
                cbxDestino.addItem(resultadoBusqueda.getString("nombre"));
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error al conectarse a la base de datos. Error " + ex.getMessage());
        }
    }
    public void Guardar(){
        Producto p = new Producto();
        int cantidad = Integer.parseInt(txfCantidad.getText());
        String sOrigen = (String)cbxOrigen.getSelectedItem();
        String sDestino =(String)cbxDestino.getSelectedItem();
        try {
            Connection nuevaConexion = DriverManager.getConnection(
                    "jdbc:mysql://localhost/basedatos", "root", "Steve123.");//DEFINIR EL COMANDO CON PARAMETROS
            String comando_select = "SELECT CODIGO, NOMBRE, TIPO, CANTIDAD, PRECIO FROM "+ sOrigen+" WHERE codigo = ?";
            PreparedStatement nuevoStatamentPreparado = nuevaConexion.prepareStatement(comando_select); //DEFINIR LOS PARAMETROS
            nuevoStatamentPreparado.setString(1, txfCodigo.getText()); //EJECUTAMOS EL COMANDO Y ALMACENAMOS EL RESULTADO
            ResultSet resultadoBusqueda = nuevoStatamentPreparado.executeQuery(); //EN ESTE CASO SOLO QUEREMOS QUE NOS MUESTRE EL PRIMER RESULTADO
            if (resultadoBusqueda.next()) {
                p.setCodigoProd(resultadoBusqueda.getString("codigo"));
                p.setNombreProd(resultadoBusqueda.getString("nombre"));
                p.setCategoria(resultadoBusqueda.getString("tipo"));
                p.setCantidad(cantidad);
                p.setPrecio(resultadoBusqueda.getDouble("precio"));
                if (sOrigen.equals(sDestino)) {
                    JOptionPane.showMessageDialog(null, "No se puede transeferir en la misma sucursal.\n Selecione una sucursal de destino diferente");
                }else{
                    if(cantidad<resultadoBusqueda.getInt("cantidad")){
                        Validar(p);
                        int cantidadF = resultadoBusqueda.getInt("cantidad")-cantidad;
                        p.setCantidad(cantidadF);
                        EditarOrigen(p);
                    }else if(cantidad == resultadoBusqueda.getInt("cantidad")){
                        Validar(p);
                        Transferir(p);
                        Eliminar(p);
                    }else{
                        JOptionPane.showMessageDialog(null, "Cantidad Insuficiente para transferir");
                    }
                }
            }else {
                JOptionPane.showMessageDialog(this, "El registro buscado no existe");//SINO INDICA QUE NO EXISTE
           }
                
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error"
                    + " al conectarse a la base de datos. Error " + ex.getMessage());
        }
    }
    public void Validar(Producto p){
        String sDestino =(String)cbxDestino.getSelectedItem();
        try {
            Connection nuevaConexion = DriverManager.getConnection(
                    "jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            String comando_select = "SELECT CODIGO, CANTIDAD FROM "+ sDestino+" WHERE codigo = ?";
            PreparedStatement nuevoStatamentPreparado = nuevaConexion.prepareStatement(comando_select);
            nuevoStatamentPreparado.setString(1, txfCodigo.getText());
            ResultSet resultadoBusqueda = nuevoStatamentPreparado.executeQuery();
            if (resultadoBusqueda.next()) { 
                EditarDestino(p, resultadoBusqueda.getInt("cantidad"));
            }else {
                Transferir(p);
           }
                
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error"
                    + " al conectarse a la base de datos. Error " + ex.getMessage());
        }
        
    }
    
    public void Transferir(Producto p){
        String nomSucr = (String) cbxDestino.getSelectedItem();
        try {
            Connection nuevaConexion = DriverManager.getConnection("jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            String comando_Insert = "INSERT INTO "+ nomSucr+" VALUES(?,?,?,?,?)";
            PreparedStatement nuevoStatamentPreparado = nuevaConexion.prepareStatement(comando_Insert);
            nuevoStatamentPreparado.setString(1, p.getCodigoProd());
            nuevoStatamentPreparado.setString(2, p.getNombreProd());
            nuevoStatamentPreparado.setString(3, p.getCategoria());
            nuevoStatamentPreparado.setString(4, Integer.toString(p.getCantidad()));
            nuevoStatamentPreparado.setString(5, String.valueOf(p.getPrecio()));
            nuevoStatamentPreparado.executeUpdate();
            JOptionPane.showMessageDialog(this, "Se ha creado el registro exitosamente");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error al conectarse a la base de datos. Error " + ex.getMessage());
        }
    }
    public void Eliminar(Producto p){
        String nomSucr = (String) cbxOrigen.getSelectedItem();
        try {
            //CREAMOS LA CONEXION CON LA BD
            Connection nuevaConexion = DriverManager.getConnection(
                    "jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            //DEFINIR EL COMANDO CON PARAMETROS
            String comando_select = "DELETE FROM "+ nomSucr +" WHERE codigo = ?";
            PreparedStatement nuevoStatamentPreparado = 
                    nuevaConexion.prepareStatement(comando_select);
            //DEFINIR LOS PARAMETROS
            nuevoStatamentPreparado.setString(1, p.getCodigoProd());
            //EJECUTAMOS EL COMANDO
            nuevoStatamentPreparado.executeUpdate();
            JOptionPane.showMessageDialog(this, "Se ha eliminado el "
                    + "registro exitosamente");          
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error"
                    + " al conectarse a la base de datos. Error " + ex.getMessage());
        }  
    }
    
    public void EditarOrigen(Producto p){
        String nomSucr = (String) cbxOrigen.getSelectedItem();
        try {
            Connection nuevaConexion = DriverManager.getConnection("jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            String comando_select = "UPDATE " + nomSucr + " SET CANTIDAD = ? WHERE Codigo = ?";
            PreparedStatement nuevoStatamentPreparado = nuevaConexion.prepareStatement(comando_select);
            nuevoStatamentPreparado.setString(1, Integer.toString(p.getCantidad()));
            nuevoStatamentPreparado.setString(2, p.getCodigoProd());
            nuevoStatamentPreparado.executeUpdate();
            JOptionPane.showMessageDialog(this, "Producto modificado");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error al conectarse a la base de datos. Error " + ex.getMessage());
        }
    }
    
    public void EditarDestino(Producto p, int num){
        String nomSucr = (String) cbxDestino.getSelectedItem();
        int cantidad = Integer.parseInt(txfCantidad.getText());
        try {
            Connection nuevaConexion = DriverManager.getConnection("jdbc:mysql://localhost/basedatos", "root", "Steve123.");
            String comando_select = "UPDATE " + nomSucr + " SET NOMBRE =?, TIPO = ?, CANTIDAD = ?, PRECIO = ? WHERE codigo = ?" ;
            PreparedStatement nuevoStatamentPreparado = nuevaConexion.prepareStatement(comando_select);
            nuevoStatamentPreparado.setString(1, p.getNombreProd());
            nuevoStatamentPreparado.setString(2, p.getCategoria());
            nuevoStatamentPreparado.setInt(3, num+cantidad);
            nuevoStatamentPreparado.setDouble(4, p.getPrecio());
            nuevoStatamentPreparado.setString(5, p.getCodigoProd());
            nuevoStatamentPreparado.executeUpdate();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "ha ocurrido un error al conectarse a la base de datos. Error " + ex.getMessage());
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransferirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransferirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransferirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransferirProducto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransferirProducto().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttTransferir;
    private javax.swing.JComboBox<String> cbxDestino;
    private javax.swing.JComboBox<String> cbxOrigen;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txfCantidad;
    private javax.swing.JTextField txfCodigo;
    // End of variables declaration//GEN-END:variables
}
